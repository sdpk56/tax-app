name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_TAG: ${{ github.run_id }}
  
jobs:
  sonarqube:
    name: ðŸ”Ž SonarQube Analysis
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml', '**/*.gradle') }}
          restore-keys: ${{ runner.os }}-sonar-
      
      - name: Set up SonarScanner CLI
        run: |
          SONAR_SCANNER_URL="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856.zip"
          curl -sS -o sonar-scanner.zip $SONAR_SCANNER_URL
          unzip -o sonar-scanner.zip
          echo "$PWD/sonar-scanner-4.8.0.2856/bin" >> $GITHUB_PATH

      - name: Run SonarScanner CLI
        run: |
          sonar-scanner.bat \
            -D sonar.projectKey=demo_project \
            -D sonar.sources=./backend,./frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
  build-and-push:
    name: ðŸ“¦ Build and Push Docker Images
    runs-on: self-hosted
    needs: sonarqube
    strategy:
      matrix:
        include:
          - project: backend
            dockerfile: ./backend/Dockerfile
            context: ./backend
            image_name: tax-backend
          - project: frontend
            dockerfile: ./frontend/Dockerfile
            context: ./frontend
            image_name: tax-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push ${{ matrix.project }} Docker image
        uses: docker/build-and-push-action@v5
        with:
          context: ${{ matrix.context }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image_name }}:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image_name }}:latest
          
  notify-on-failure:
    name: ðŸ”” Notify on Failure
    runs-on: ubuntu-latest
    if: failure()
    needs: [sonarqube, build-and-push]
    steps:
      - name: Get job status from all dependencies
        id: get_status
        run: |
          echo "sonarqube_status=${{ needs.sonarqube.result }}" >> $GITHUB_OUTPUT
          echo "build_and_push_status=${{ needs.build-and-push.result }}" >> $GITHUB_OUTPUT
      
      - name: Get workflow summary
        id: get_summary
        run: |
          summary="Workflow for run ${{ github.run_id }} failed with the following status:\n"
          if [[ "${{ steps.get_status.outputs.sonarqube_status }}" == "failure" ]]; then
            summary+="* ðŸ”Ž SonarQube Analysis: Failed\n"
          fi
          if [[ "${{ steps.get_status.outputs.build_and_push_status }}" == "failure" ]]; then
            summary+="* ðŸ“¦ Build and Push Docker Images: Failed\n"
          fi
          summary+="For details, visit: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$summary" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: 'Workflow Failed: ${{ github.workflow }}'
          body: ${{ steps.get_summary.outputs.summary }}
          to: sdpk.ks3@gmail.com
          from: GitHub Actions
